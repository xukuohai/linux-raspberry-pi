From 4964e70149acaea7428ce4fd5b9ce67cda0e3cba Mon Sep 17 00:00:00 2001
From: Frank van der Linden <fllinden@amazon.com>
Date: Tue, 13 Oct 2020 20:29:59 +0000
Subject: lustre: remove CRYPTO_TFM_RES_BAD_KEY_LEN

    LU-13344 libcfs: adler32: don't set CRYPTO_TFM_RES_BAD_KEY_LEN

    This flag was not being checked by most callers and has been removed since
    Commit 674f368a952c ("crypto: remove CRYPTO_TFM_RES_BAD_KEY_LEN")
    so remove from lustre too.

    Change-Id: Ia616430a98d05c7bb3b22a0be543e83855272d2f
    Test-Parameters: trivial
    Signed-off-by: Mr NeilBrown <neilb@suse.de>
    Reviewed-on: https://review.whamcloud.com/37870
    Reviewed-by: James Simmons <jsimmons@infradead.org>
    Reviewed-by: Shaun Tancheff <shaun.tancheff@hpe.com>
    Tested-by: jenkins <devops@whamcloud.com>
    Tested-by: Maloo <maloo@whamcloud.com>
    Reviewed-by: Sebastien Buisson <sbuisson@ddn.com>
    Reviewed-by: Oleg Drokin <green@whamcloud.com>

[fllinden - do the same thing for the crc32 key code which is still
 in the lustre 2.10 branch that we use]
Signed-off-by: Frank van der Linden <fllinden@amazon.com>
---
 .../lustrefsx/libcfs/libcfs/linux/linux-crypto-adler.c       | 5 ++---
 .../lustrefsx/libcfs/libcfs/linux/linux-crypto-crc32.c       | 5 ++---
 .../libcfs/libcfs/linux/linux-crypto-crc32c-pclmul.c         | 5 ++---
 .../lustrefsx/libcfs/libcfs/linux/linux-crypto-crc32pclmul.c | 5 ++---
 4 files changed, 8 insertions(+), 12 deletions(-)

diff --git a/drivers/staging/lustrefsx/libcfs/libcfs/linux/linux-crypto-adler.c b/drivers/staging/lustrefsx/libcfs/libcfs/linux/linux-crypto-adler.c
index 90f502f35e58..b71d7f8bc9d6 100644
--- a/drivers/staging/lustrefsx/libcfs/libcfs/linux/linux-crypto-adler.c
+++ b/drivers/staging/lustrefsx/libcfs/libcfs/linux/linux-crypto-adler.c
@@ -51,10 +51,9 @@ static int adler32_setkey(struct crypto_shash *hash, const u8 *key,
 {
 	u32 *mctx = crypto_shash_ctx(hash);
 
-	if (keylen != sizeof(u32)) {
-		crypto_shash_set_flags(hash, CRYPTO_TFM_RES_BAD_KEY_LEN);
+	if (keylen != sizeof(u32))
 		return -EINVAL;
-	}
+
 	*mctx = *(u32 *)key;
 	return 0;
 }
diff --git a/drivers/staging/lustrefsx/libcfs/libcfs/linux/linux-crypto-crc32.c b/drivers/staging/lustrefsx/libcfs/libcfs/linux/linux-crypto-crc32.c
index 58e4691cfb3d..85fc287cb884 100644
--- a/drivers/staging/lustrefsx/libcfs/libcfs/linux/linux-crypto-crc32.c
+++ b/drivers/staging/lustrefsx/libcfs/libcfs/linux/linux-crypto-crc32.c
@@ -63,10 +63,9 @@ static int crc32_setkey(struct crypto_shash *hash, const u8 *key,
 {
 	u32 *mctx = crypto_shash_ctx(hash);
 
-	if (keylen != sizeof(u32)) {
-		crypto_shash_set_flags(hash, CRYPTO_TFM_RES_BAD_KEY_LEN);
+	if (keylen != sizeof(u32))
 		return -EINVAL;
-	}
+
 	*mctx = le32_to_cpup((__le32 *)key);
 	return 0;
 }
diff --git a/drivers/staging/lustrefsx/libcfs/libcfs/linux/linux-crypto-crc32c-pclmul.c b/drivers/staging/lustrefsx/libcfs/libcfs/linux/linux-crypto-crc32c-pclmul.c
index fc55ad7969fa..40d9e7416068 100644
--- a/drivers/staging/lustrefsx/libcfs/libcfs/linux/linux-crypto-crc32c-pclmul.c
+++ b/drivers/staging/lustrefsx/libcfs/libcfs/linux/linux-crypto-crc32c-pclmul.c
@@ -61,10 +61,9 @@ static int crc32c_pclmul_setkey(struct crypto_shash *hash, const u8 *key,
 {
 	u32 *mctx = crypto_shash_ctx(hash);
 
-	if (keylen != sizeof(u32)) {
-		crypto_shash_set_flags(hash, CRYPTO_TFM_RES_BAD_KEY_LEN);
+	if (keylen != sizeof(u32))
 		return -EINVAL;
-	}
+
 	*mctx = le32_to_cpup((__le32 *)key);
 	return 0;
 }
diff --git a/drivers/staging/lustrefsx/libcfs/libcfs/linux/linux-crypto-crc32pclmul.c b/drivers/staging/lustrefsx/libcfs/libcfs/linux/linux-crypto-crc32pclmul.c
index a238e4e39fce..88e697897b15 100644
--- a/drivers/staging/lustrefsx/libcfs/libcfs/linux/linux-crypto-crc32pclmul.c
+++ b/drivers/staging/lustrefsx/libcfs/libcfs/linux/linux-crypto-crc32pclmul.c
@@ -100,10 +100,9 @@ static int crc32_pclmul_setkey(struct crypto_shash *hash, const u8 *key,
 {
 	u32 *mctx = crypto_shash_ctx(hash);
 
-	if (keylen != sizeof(u32)) {
-		crypto_shash_set_flags(hash, CRYPTO_TFM_RES_BAD_KEY_LEN);
+	if (keylen != sizeof(u32))
 		return -EINVAL;
-	}
+
 	*mctx = le32_to_cpup((__le32 *)key);
 	return 0;
 }
-- 
2.32.0

