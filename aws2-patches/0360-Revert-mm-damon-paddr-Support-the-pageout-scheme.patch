From 9322672d98185621f8928af4ff94a2c8a9b5fd4d Mon Sep 17 00:00:00 2001
From: SeongJae Park <sjpark@amazon.de>
Date: Tue, 23 Nov 2021 14:01:57 +0000
Subject: Revert "mm/damon/paddr: Support the pageout scheme"

This reverts commit e7401846f9c3b15a2b8e08c0c4063f06a9531c50.
---
 mm/damon/paddr.c | 39 +--------------------------------------
 1 file changed, 1 insertion(+), 38 deletions(-)

diff --git a/mm/damon/paddr.c b/mm/damon/paddr.c
index 873cbf216466..e5ff4cf50d48 100644
--- a/mm/damon/paddr.c
+++ b/mm/damon/paddr.c
@@ -7,10 +7,6 @@
 
 #define pr_fmt(fmt) "damon-pa: " fmt
 
-#include <linux/page_idle.h>
-#include <linux/swap.h>
-
-#include "../internal.h"
 #include "prmtv-common.h"
 
 /*
@@ -89,39 +85,6 @@ bool damon_pa_target_valid(void *t)
 	return true;
 }
 
-int damon_pa_apply_scheme(struct damon_ctx *ctx, struct damon_target *t,
-		struct damon_region *r, struct damos *scheme)
-{
-	unsigned long addr;
-	LIST_HEAD(page_list);
-
-	if (scheme->action != DAMOS_PAGEOUT)
-		return -EINVAL;
-
-	for (addr = r->ar.start; addr < r->ar.end; addr += PAGE_SIZE) {
-		struct page *page = damon_get_page(PHYS_PFN(addr));
-
-		if (!page)
-			continue;
-
-		ClearPageReferenced(page);
-		test_and_clear_page_young(page);
-		if (isolate_lru_page(page)) {
-			put_page(page);
-			continue;
-		}
-		if (PageUnevictable(page)) {
-			putback_lru_page(page);
-		} else {
-			list_add(&page->lru, &page_list);
-			put_page(page);
-		}
-	}
-	reclaim_pages(&page_list);
-	cond_resched();
-	return 0;
-}
-
 void damon_pa_set_primitives(struct damon_ctx *ctx)
 {
 	ctx->primitive.init = NULL;
@@ -131,5 +94,5 @@ void damon_pa_set_primitives(struct damon_ctx *ctx)
 	ctx->primitive.reset_aggregated = NULL;
 	ctx->primitive.target_valid = damon_pa_target_valid;
 	ctx->primitive.cleanup = NULL;
-	ctx->primitive.apply_scheme = damon_pa_apply_scheme;
+	ctx->primitive.apply_scheme = NULL;
 }
-- 
2.32.0

