From 0e56ad5e5f13210ccf9713b910f76e9d526e09c9 Mon Sep 17 00:00:00 2001
From: Anchal Agarwal <anchalag@amazon.com>
Date: Mon, 11 Oct 2021 18:14:12 +0000
Subject: Revert "mm/damon: Add a tracepoint"

This reverts commit c6e3572cf2ff03448cf5cae0296004166c7630c6.
---
 include/trace/events/damon.h | 43 ------------------------------------
 mm/damon/core.c              |  7 +-----
 2 files changed, 1 insertion(+), 49 deletions(-)
 delete mode 100644 include/trace/events/damon.h

diff --git a/include/trace/events/damon.h b/include/trace/events/damon.h
deleted file mode 100644
index 2f422f4f1fb9..000000000000
--- a/include/trace/events/damon.h
+++ /dev/null
@@ -1,43 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#undef TRACE_SYSTEM
-#define TRACE_SYSTEM damon
-
-#if !defined(_TRACE_DAMON_H) || defined(TRACE_HEADER_MULTI_READ)
-#define _TRACE_DAMON_H
-
-#include <linux/damon.h>
-#include <linux/types.h>
-#include <linux/tracepoint.h>
-
-TRACE_EVENT(damon_aggregated,
-
-	TP_PROTO(struct damon_target *t, struct damon_region *r,
-		unsigned int nr_regions),
-
-	TP_ARGS(t, r, nr_regions),
-
-	TP_STRUCT__entry(
-		__field(unsigned long, target_id)
-		__field(unsigned int, nr_regions)
-		__field(unsigned long, start)
-		__field(unsigned long, end)
-		__field(unsigned int, nr_accesses)
-	),
-
-	TP_fast_assign(
-		__entry->target_id = t->id;
-		__entry->nr_regions = nr_regions;
-		__entry->start = r->ar.start;
-		__entry->end = r->ar.end;
-		__entry->nr_accesses = r->nr_accesses;
-	),
-
-	TP_printk("target_id=%lu nr_regions=%u %lu-%lu: %u",
-			__entry->target_id, __entry->nr_regions,
-			__entry->start, __entry->end, __entry->nr_accesses)
-);
-
-#endif /* _TRACE_DAMON_H */
-
-/* This part must be outside protection */
-#include <trace/define_trace.h>
diff --git a/mm/damon/core.c b/mm/damon/core.c
index 912112662d0c..b36b6bdd94e2 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -13,9 +13,6 @@
 #include <linux/random.h>
 #include <linux/slab.h>
 
-#define CREATE_TRACE_POINTS
-#include <trace/events/damon.h>
-
 /* Get a random number in [l, r) */
 #define damon_rand(l, r) (l + prandom_u32_max(r - l))
 
@@ -391,10 +388,8 @@ static void kdamond_reset_aggregated(struct damon_ctx *c)
 	damon_for_each_target(t, c) {
 		struct damon_region *r;
 
-		damon_for_each_region(r, t) {
-			trace_damon_aggregated(t, r, damon_nr_regions(t));
+		damon_for_each_region(r, t)
 			r->nr_accesses = 0;
-		}
 	}
 }
 
-- 
2.32.0

