From 1a04ea7f979ed4250d25cc0e8b8f06a349e62da4 Mon Sep 17 00:00:00 2001
From: Anchal Agarwal <anchalag@amazon.com>
Date: Thu, 4 Feb 2021 06:30:35 +0000
Subject: ena: update to 2.4.1

Update the ENA driver to version 2.4.1. Changelog since 2.4.0:

**Bug Fixes**
* Fix compilation error in kernels >= 5.10

**Minor Changes**
* Make all module parameters readable

Signed-off-by: Anchal Agarwal <anchalag@amazon.com>
---
 drivers/amazon/net/ena/ena_netdev.c | 11 +++++------
 drivers/amazon/net/ena/ena_netdev.h |  2 +-
 drivers/amazon/net/ena/kcompat.h    |  8 +++++---
 3 files changed, 11 insertions(+), 10 deletions(-)

diff --git a/drivers/amazon/net/ena/ena_netdev.c b/drivers/amazon/net/ena/ena_netdev.c
index 9fe9515be80c..590762a05b7b 100755
--- a/drivers/amazon/net/ena/ena_netdev.c
+++ b/drivers/amazon/net/ena/ena_netdev.c
@@ -46,15 +46,15 @@ MODULE_VERSION(DRV_MODULE_GENERATION);
 #define DEFAULT_MSG_ENABLE (NETIF_MSG_DRV | NETIF_MSG_PROBE | NETIF_MSG_IFUP | \
 		NETIF_MSG_TX_DONE | NETIF_MSG_TX_ERR | NETIF_MSG_RX_ERR)
 static int debug = -1;
-module_param(debug, int, 0);
-MODULE_PARM_DESC(debug, "Debug level (0=none,...,16=all)");
+module_param(debug, int, 0444);
+MODULE_PARM_DESC(debug, "Debug level (-1=default,0=none,...,16=all)");
 
 static int rx_queue_size = ENA_DEFAULT_RING_SIZE;
-module_param(rx_queue_size, int, S_IRUGO);
+module_param(rx_queue_size, int, 0444);
 MODULE_PARM_DESC(rx_queue_size, "Rx queue size. The size should be a power of 2. Max value is 8K\n");
 
 static int force_large_llq_header;
-module_param(force_large_llq_header, int, S_IRUGO);
+module_param(force_large_llq_header, int, 0444);
 MODULE_PARM_DESC(force_large_llq_header, "Increases maximum supported header size in LLQ mode to 224 bytes, while reducing the maximum TX queue size by half.\n");
 
 static int num_io_queues = ENA_MAX_NUM_IO_QUEUES;
@@ -62,7 +62,7 @@ module_param(num_io_queues, int, 0444);
 MODULE_PARM_DESC(num_io_queues, "Sets number of RX/TX queues to allocate to device. The maximum value depends on the device and number of online CPUs.\n");
 
 static int lpc_size = ENA_LPC_DEFAULT_MULTIPLIER;
-module_param(lpc_size, uint, 0);
+module_param(lpc_size, uint, 0444);
 MODULE_PARM_DESC(lpc_size, "Each local page cache (lpc) holds N * 1024 pages. This parameter sets N which is rounded up to a multiplier of 2. If zero, the page cache is disabled. Max: 32\n");
 
 static struct ena_aenq_handlers aenq_handlers;
@@ -2572,7 +2572,6 @@ static void ena_del_napi_in_range(struct ena_adapter *adapter,
 	int i;
 
 	for (i = first_index; i < first_index + count; i++) {
-		napi_hash_del(&adapter->ena_napi[i].napi);
 		netif_napi_del(&adapter->ena_napi[i].napi);
 
 #ifdef ENA_XDP_SUPPORT
diff --git a/drivers/amazon/net/ena/ena_netdev.h b/drivers/amazon/net/ena/ena_netdev.h
index 48f648ef85f0..144bfb5378c0 100755
--- a/drivers/amazon/net/ena/ena_netdev.h
+++ b/drivers/amazon/net/ena/ena_netdev.h
@@ -26,7 +26,7 @@
 
 #define DRV_MODULE_GEN_MAJOR	2
 #define DRV_MODULE_GEN_MINOR	4
-#define DRV_MODULE_GEN_SUBMINOR 0
+#define DRV_MODULE_GEN_SUBMINOR 1
 
 #define DRV_MODULE_NAME		"ena"
 #ifndef DRV_MODULE_GENERATION
diff --git a/drivers/amazon/net/ena/kcompat.h b/drivers/amazon/net/ena/kcompat.h
index 729a13eeabf9..35ab08cada98 100755
--- a/drivers/amazon/net/ena/kcompat.h
+++ b/drivers/amazon/net/ena/kcompat.h
@@ -759,7 +759,8 @@ static inline void netdev_rss_key_fill(void *buffer, size_t len)
 #define ENA_GENERIC_PM_OPS
 #endif
 
-#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 5 ,0)
+#if ((LINUX_VERSION_CODE < KERNEL_VERSION(4, 5 ,0)) && \
+     !(RHEL_RELEASE_CODE && RHEL_RELEASE_CODE >= RHEL_RELEASE_VERSION(7,3)))
 static inline int page_ref_count(struct page *page)
 {
 	return atomic_read(&page->_count);
@@ -771,8 +772,9 @@ static inline void page_ref_inc(struct page *page)
 }
 #endif
 
-#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 18, 0)
-static inline struct page *dev_alloc_page()
+#if ((LINUX_VERSION_CODE < KERNEL_VERSION(3, 18, 0)) && \
+     !(RHEL_RELEASE_CODE && RHEL_RELEASE_CODE >= RHEL_RELEASE_VERSION(7,2)))
+static inline struct page *dev_alloc_page(void)
 {
 	gfp_t gfp_mask = GFP_ATOMIC | __GFP_NOWARN;
 
-- 
2.32.0

