From c6c0e4afb5a02a0c527a8832fea27af0fdca7922 Mon Sep 17 00:00:00 2001
From: Frank van der Linden <fllinden@amazon.com>
Date: Wed, 19 Feb 2020 21:13:10 +0000
Subject: lustre: llite: ll_fault fixes

Import upstream Lustre commit LU-11403:

    Various error conditions in the fault path can cause us to
    not return a page in vm_fault.  Check if it's present
    before accessing it.

    Additionally, it's not valid to return VM_FAULT_NOPAGE for
    page faults.  The correct return when accessing a page that
    does not exist is VM_FAULT_SIGBUS.  Correcting this avoids
    looping infinitely in the testcase.

    Signed-off-by: Patrick Farrell <pfarrell@whamcloud.com>
    Change-Id: I53fc16d91462ac5d4555855dfa067d7fd6716c90
    Reviewed-on: https://review.whamcloud.com/34247
    Tested-by: Jenkins
    Tested-by: Maloo <maloo@whamcloud.com>
    Reviewed-by: Alex Zhuravlev <bzzz@whamcloud.com>
    Reviewed-by: Alexander Zarochentsev <c17826@cray.com>
    Reviewed-by: Oleg Drokin <green@whamcloud.com>

[fllinden: only pick the code part, we don't ship the tests]
Signed-off-by: Frank van der Linden <fllinden@amazon.com>
---
 drivers/staging/lustrefsx/lustre/llite/llite_mmap.c | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/lustrefsx/lustre/llite/llite_mmap.c b/drivers/staging/lustrefsx/lustre/llite/llite_mmap.c
index 79adfa937851..bf3c8636dff5 100644
--- a/drivers/staging/lustrefsx/lustre/llite/llite_mmap.c
+++ b/drivers/staging/lustrefsx/lustre/llite/llite_mmap.c
@@ -230,9 +230,6 @@ static inline int to_fault_error(int result)
 	case 0:
 		result = VM_FAULT_LOCKED;
 		break;
-	case -EFAULT:
-		result = VM_FAULT_NOPAGE;
-		break;
 	case -ENOMEM:
 		result = VM_FAULT_OOM;
 		break;
@@ -355,7 +352,8 @@ static int ll_fault(struct vm_area_struct *vma, struct vm_fault *vmf)
 
 restart:
 	result = ll_fault0(vma, vmf);
-	if (!(result & (VM_FAULT_RETRY | VM_FAULT_ERROR | VM_FAULT_LOCKED))) {
+	if (vmf->page &&
+	    !(result & (VM_FAULT_RETRY | VM_FAULT_ERROR | VM_FAULT_LOCKED))) {
                 struct page *vmpage = vmf->page;
 
                 /* check if this page has been truncated */
-- 
2.32.0

